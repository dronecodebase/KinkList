var log = function(t, n) {
    return Math.log(t) / Math.log(n)
},
strToClass = function(t) {
    var n = "";
    t = t.toLowerCase();
    for (var e = !1, i = 0; i < t.length; i++) {
        var a = t[i];
        "abcdefghijklmnopqrstuvwxyz".indexOf(a) >= 0 ? (e && (a = a.toUpperCase()), n += a, e = !1) : e = !0
    }
    return n
},
addCssRule = function(t, n) {
    var e = document.styleSheets[0];
    "insertRule" in e ? e.insertRule(t + "{" + n + "}", 0) : "addRule" in e && e.addRule(t, n, 0)
},
kinks = {},
inputKinks = {},
colors = {},
level = {};
$(function() {
inputKinks = {
    $columns: [],
    createCategory: function(t, n) {
        for (var e = $('<div class="kinkCategory">').addClass("cat-" + strToClass(t)).data("category", t).append($("<h2>").text(t)), i = $('<table class="kinkGroup">').data("fields", n), a = $("<thead>").appendTo(i), s = 0; s < n.length; s++) $("<th>").addClass("choicesCol").text(n[s]).appendTo(a);
        return $("<th>").appendTo(a), $("<tbody>").appendTo(i), e.append(i), e
    },
    createChoice: function() {
        for (var t = $("<div>").addClass("choices"), n = Object.keys(level), e = 0; e < n.length; e++) $("<button>").addClass("choice").addClass(level[n[e]]).data("level", n[e]).data("levelInt", e).attr("title", n[e]).appendTo(t).on("click", function() {
            t.find("button").removeClass("selected"), $(this).addClass("selected")
        });
        return t
    },
    createKink: function(t, n) {
        for (var e = $("<tr>").data("kink", n).addClass("kinkRow"), i = 0; i < t.length; i++) {
            var a = inputKinks.createChoice();
            a.data("field", t[i]), a.addClass("choice-" + strToClass(t[i])), $("<td>").append(a).appendTo(e)
        }
        return $("<td>").text(n).appendTo(e), e.addClass("kink-" + strToClass(n)), e
    },
    createColumns: function() {
        var t = Math.floor((document.body.scrollWidth - 20) / 400);
        t || (t = 1), t > 4 && (t = 4);
        var n = "col" + ["100", "50", "33", "25"][t - 1];
        inputKinks.$columns = [];
        for (var e = 0; e < t; e++) inputKinks.$columns.push($("<div>").addClass("col " + n).appendTo($("#InputList")))
    },
    placeCategories: function(t) {
        for (var n = $("body"), e = 0, i = 0; i < t.length; i++) {
            var a = t[i].clone().appendTo(n);
            e += a.height(), a.remove()
        }
        var s = e / inputKinks.$columns.length,
            o = 0;
        for (i = 0; i < t.length; i++) {
            for (inputKinks.$columns[o].height() + t[i].height() / 2 > s && o++; o >= inputKinks.$columns.length;) o--;
            inputKinks.$columns[o].append(t[i])
        }
    },
    fillInputList: function() {
        $("#InputList").empty(), inputKinks.createColumns();
        for (var t = [], n = Object.keys(kinks), e = 0; e < n.length; e++) {
            for (var i = n[e], a = kinks[i], s = a.fields, o = a.kinks, r = inputKinks.createCategory(i, s), l = r.find("tbody"), u = 0; u < o.length; u++) l.append(inputKinks.createKink(s, o[u]));
            t.push(r)
        }
        inputKinks.placeCategories(t), $("#InputList").find("button.choice").on("click", function() {
            location.hash = inputKinks.updateHash()
        })
    },
    init: function() {
        var t;
        inputKinks.fillInputList(), inputKinks.parseHash(), $("#Export").on("click", inputKinks.export), $("#URL").on("click", function() {
            this.select()
        }), t = 0, $(window).on("resize", function() {
            var n = (new Date).getTime();
            t = n, setTimeout(function() {
                t === n && (inputKinks.fillInputList(), inputKinks.parseHash())
            }, 500)
        })
    },
    hashChars: "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_.=+*^!@",
    maxPow: function(t, n) {
        for (var e = 1, i = 1; Math.pow(t, i) <= n; i++) e = i;
        return e
    },
    prefix: function(t, n, e) {
        for (; t.length < n;) t = e + t;
        return t
    },
    drawLegend: function(t) {
        t.font = "bold 13px Arial", t.fillStyle = "#000000";
        for (var n = Object.keys(colors), e = t.canvas.width - 15 - 120 * n.length, i = 0; i < n.length; i++) t.beginPath(), t.arc(e + 120 * i, 17, 8, 0, 2 * Math.PI, !1), t.fillStyle = colors[n[i]], t.fill(), t.strokeStyle = "rgba(0, 0, 0, 0.5)", t.lineWidth = 1, t.stroke(), t.fillStyle = "#000000", t.fillText(n[i], e + 15 + 120 * i, 22)
    },
    setupCanvas: function(t, n, e) {
        $("canvas").remove();
        var i = document.createElement("canvas");
        i.width = t, i.height = n, $(i).css({
            width: t,
            height: n
        });
        var a = i.getContext("2d");
        return a.fillStyle = "#FFFFFF", a.fillRect(0, 0, i.width, i.height), a.font = "bold 24px Arial", a.fillStyle = "#000000", a.fillText("Hypno-Kinklist " + e, 5, 25), inputKinks.drawLegend(a), {
            context: a,
            canvas: i
        }
    },
    drawCallHandlers: {
        simpleTitle: function(t, n) {
            t.fillStyle = "#000000", t.font = "bold 18px Arial", t.fillText(n.data, n.x, n.y + 5)
        },
        titleSubtitle: function(t, n) {
            t.fillStyle = "#000000", t.font = "bold 18px Arial", t.fillText(n.data.category, n.x, n.y + 5);
            var e = n.data.fields.join(", ");
            t.font = "italic 12px Arial", t.fillText(e, n.x, n.y + 20)
        },
        kinkRow: function(t, n) {
            t.fillStyle = "#000000", t.font = "12px Arial";
            var e = n.x + 5 + 20 * n.data.choices.length,
                i = n.y - 6;
            t.fillText(n.data.text, e, i);
            for (var a = 0; a < n.data.choices.length; a++) {
                var s = n.data.choices[a],
                    o = colors[s];
                e = 10 + n.x + 20 * a, i = n.y - 10;
                t.beginPath(), t.arc(e, i, 8, 0, 2 * Math.PI, !1), t.fillStyle = o, t.fill(), t.strokeStyle = "rgba(0, 0, 0, 0.5)", t.lineWidth = 1, t.stroke()
            }
        }
    },
    export: function() {
        var t = prompt("Please enter your name");
        if ("string" == typeof t) {
            t.length && (t = "(" + t + ")"), $("#Loading").fadeIn(), $("#URL").fadeOut();
            for (var n = 10, e = 10, i = 50, a = 10, s = $(".kinkCategory").length, o = $(".kinkCategory th + th + th").length, r = s - o, l = 25 * $(".kinkRow").length + 50 * o + 35 * r, u = [], c = 0; c < 6; c++) u.push({
                height: 0,
                drawStack: []
            });
            var p = l / 6,
                d = 0;
            $(".kinkCategory").each(function() {
                var t = $(this),
                    n = t.data("category"),
                    e = kinks[n],
                    i = e.fields,
                    a = e.kinks,
                    s = 0;
                for (s += 1 === i.length ? 35 : 50, s += 25 * a.length, u[d].height + s / 2 > p && d++; d >= 6;) d--;
                var o = u[d],
                    r = {
                        y: o.height
                    };
                o.drawStack.push(r), i.length < 2 ? (o.height += 35, r.type = "simpleTitle", r.data = n) : (o.height += 50, r.type = "titleSubtitle", r.data = {
                    category: n,
                    fields: i
                }), t.find(".kinkRow").each(function() {
                    var t = $(this),
                        n = {
                            y: o.height,
                            type: "kinkRow",
                            data: {
                                choices: [],
                                text: t.data("kink")
                            }
                        };
                    o.drawStack.push(n), o.height += 25, t.find(".choices").each(function() {
                        var t = $(this).find(".choice.selected"),
                            e = t.length > 0 ? t.data("level") : Object.keys(level)[0];
                        n.data.choices.push(e)
                    })
                })
            });
            var h = 0;
            for (c = 0; c < u.length; c++) h < u[c].height && (h = u[c].height);
            var k = n + e + 1500,
                f = i + a + h,
                v = inputKinks.setupCanvas(k, f, t),
                g = v.context,
                y = v.canvas;
            for (c = 0; c < u.length; c++)
                for (var K = u[c].drawStack, x = n + 250 * c, m = 0; m < K.length; m++) {
                    var C = K[m];
                    C.x = x, C.y += i, inputKinks.drawCallHandlers[C.type](g, C)
                }
            $.ajax({
                url: "https://api.imgur.com/3/image",
                type: "POST",
                headers: {
                    Authorization: "Client-ID 9db53e5936cd02f",
                    Accept: "application/json"
                },
                data: {
                    image: y.toDataURL().split(",")[1],
                    type: "base64"
                },
                success: function(t) {
                    $("#Loading").hide();
                    var n = "https://i.imgur.com/" + t.data.id + ".png";
                    $("#URL").val(n).fadeIn()
                },
                fail: function() {
                    $("#Loading").hide(), alert("Failed to upload to imgur, could not connect")
                }
            })
        }
    },
    encode: function(t, n) {
        for (var e = inputKinks.hashChars.length, i = inputKinks.maxPow(e, Number.MAX_SAFE_INTEGER), a = inputKinks.maxPow(t, Math.pow(e, i)), s = "", o = Math.ceil(n.length / a), r = 0, l = 0; l < o; l++) {
            for (var u = 0, c = 0; c < a; c++) {
                var p = n[r++];
                if (void 0 === p) break;
                u += p * Math.pow(t, c)
            }
            for (var d = ""; u > 0;) {
                var h = Math.floor(log(u, e)),
                    k = Math.pow(e, h),
                    f = Math.floor(u / k),
                    v = f * k;
                d += inputKinks.hashChars[f], u -= v
            }
            s += inputKinks.prefix(d, i, inputKinks.hashChars[0])
        }
        return s
    },
    decode: function(t, n) {
        for (var e = inputKinks.hashChars.length, i = inputKinks.maxPow(e, Number.MAX_SAFE_INTEGER), a = [], s = Math.max(n.length / i), o = 0; o < s; o++)
            for (var r = n.substring(o * i, (o + 1) * i), l = inputKinks.decodeChunk(t, r), u = 0; u < l.length; u++) a.push(l[u]);
        return a
    },
    decodeChunk: function(t, n) {
        for (var e = inputKinks.hashChars.length, i = inputKinks.maxPow(e, Number.MAX_SAFE_INTEGER), a = inputKinks.maxPow(t, Math.pow(e, i)), s = 0, o = 0; o < n.length; o++) {
            var r = n[o],
                l = inputKinks.hashChars.indexOf(r),
                u = n.length - 1 - o;
            s += Math.pow(e, u) * l
        }
        var c = [];
        for (u = a - 1; u >= 0; u--) {
            var p = Math.floor(Math.pow(t, u)),
                d = Math.floor(s / p),
                h = p * d;
            c.push(d), s -= h
        }
        return c.reverse(), c
    },
    updateHash: function() {
        var t = [];
        return $("#InputList .choices").each(function() {
            var n = $(this).find(".selected").data("levelInt");
            n || (n = 0), t.push(n)
        }), inputKinks.encode(Object.keys(colors).length, t)
    },
    parseHash: function() {
        var t = location.hash.substring(1);
        if (!(t.length < 10)) {
            var n = inputKinks.decode(Object.keys(colors).length, t),
                e = 0;
            $("#InputList .choices").each(function() {
                var t = $(this),
                    i = n[e++];
                t.children().eq(i).addClass("selected")
            })
        }
    },
    saveSelection: function() {
        var t = [];
        return $(".choice.selected").each(function() {
            var n = "." + this.className.replace(/ /g, ".");
            n = "." + $(this).closest(".choices")[0].className.replace(/ /g, ".") + " " + n, n = "." + $(this).closest("tr.kinkRow")[0].className.replace(/ /g, ".") + " " + n, n = (n = "." + $(this).closest(".kinkCategory")[0].className.replace(/ /g, ".") + " " + n).replace(".selected", ""), t.push(n)
        }), t
    },
    inputListToText: function() {
        for (var t = "", n = Object.keys(kinks), e = 0; e < n.length; e++) {
            var i = n[e],
                a = kinks[i].fields,
                s = kinks[i].kinks;
            t += "#" + i + "\r\n", t += "(" + a.join(", ") + ")\r\n";
            for (var o = 0; o < s.length; o++) t += "* " + s[o] + "\r\n";
            t += "\r\n"
        }
        return t
    },
    restoreSavedSelection: function(t) {
        setTimeout(function() {
            for (var n = 0; n < t.length; n++) {
                var e = t[n];
                $(e).addClass("selected")
            }
            location.hash = inputKinks.updateHash()
        }, 300)
    },
    parseKinksText: function(t) {
        for (var n = {}, e = t.replace(/\r/g, "").split("\n"), i = null, a = null, s = 0; s < e.length; s++) {
            var o = e[s];
            if (o.length) {
                if ("#" === o[0]) {
                    if (a) {
                        if (!(i.fields instanceof Array) || i.fields.length < 1) return void alert(a + " does not have any fields defined!");
                        if (!(i.kinks instanceof Array) || i.kinks.length < 1) return void alert(a + " does not have any kinks listed!");
                        n[a] = i
                    }
                    a = o.substring(1).trim(), i = {
                        kinks: []
                    }
                }
                if (a) {
                    if ("(" === o[0]) {
                        i.fields = o.substring(1, o.length - 1).trim().split(",");
                        for (var r = 0; r < i.fields.length; r++) i.fields[r] = i.fields[r].trim()
                    }
                    if ("*" === o[0]) {
                        var l = o.substring(1).trim();
                        i.kinks.push(l)
                    }
                }
            }
        }
        if (a && !n[a]) {
            if (!(i.fields instanceof Array) || i.fields.length < 1) return void alert(a + " does not have any fields defined!");
            if (!(i.kinks instanceof Array) || i.kinks.length < 1) return void alert(a + " does not have any kinks listed!");
            n[a] = i
        }
        return n
    }
}, $("#Edit").on("click", function() {
    var t = inputKinks.inputListToText();
    $("#Kinks").val(t.trim()), $("#EditOverlay").fadeIn()
}), $("#EditOverlay").on("click", function() {
    $(this).fadeOut()
}), $("#KinksOK").on("click", function() {
    var t = inputKinks.saveSelection();
    try {
        var n = $("#Kinks").val();
        kinks = inputKinks.parseKinksText(n), inputKinks.fillInputList()
    } catch (t) {
        return void alert("An error occured trying to parse the text entered, please correct it and try again")
    }
    inputKinks.restoreSavedSelection(t), $("#EditOverlay").fadeOut()
}), $(".overlay > *").on("click", function(t) {
    t.stopPropagation()
});
document.styleSheets[0];
$(".legend .choice").each(function() {
        var t = $(this),
            n = t.parent().text().trim(),
            e = t.data("color"),
            i = this.className.replace("choice ", "").trim();
        addCssRule(".choice." + i, "background-color: " + e + ";"), colors[n] = e, level[n] = i
    }), kinks = inputKinks.parseKinksText($("#Kinks").text().trim()), inputKinks.init(),
    function() {
        var t = $("#InputOverlay"),
            n = $("#InputPrevious"),
            e = $("#InputNext"),
            i = $("#InputCategory"),
            a = $("#InputField"),
            s = $("#InputValues");

        function o(t) {
            return t.find(".choice.selected").data("level")
        }

        function r(t, n, e) {
            var i = ".cat-" + strToClass(t);
            return i += " .kink-" + strToClass(n), i += " .choice-" + strToClass(e), $(i)
        }
        inputKinks.getAllKinks = function() {
            for (var t = [], n = Object.keys(kinks), e = 0; e < n.length; e++)
                for (var i = n[e], a = kinks[i].fields, s = kinks[i].kinks, l = 0; l < a.length; l++)
                    for (var u = a[l], c = 0; c < s.length; c++) {
                        var p = s[c],
                            d = r(i, p, u),
                            h = {
                                category: i,
                                kink: p,
                                field: u,
                                value: o(d),
                                $choices: d,
                                showField: a.length >= 2
                            };
                        t.push(h)
                    }
            return t
        }, inputKinks.inputPopup = {
            numPrev: 3,
            numNext: 3,
            allKinks: [],
            kinkByIndex: function(t) {
                var n = inputKinks.inputPopup.allKinks.length;
                return t = (n + t) % n, inputKinks.inputPopup.allKinks[t]
            },
            generatePrimary: function(t) {
                var n = $("<div>"),
                    e = 0;
                return $(".legend > div").each(function() {
                    var i = $(this).clone();
                    i.addClass("big-choice"), i.appendTo(n), $("<span>").addClass("btn-num-text").text(e++).appendTo(i);
                    var a = i.text().trim().replace(/[0-9]/g, "");
                    t.value === a && i.addClass("selected"), i.on("click", function() {
                        n.find(".big-choice").removeClass("selected"), i.addClass("selected"), t.value = a, s.fadeOut(200, function() {
                            s.show(), inputKinks.inputPopup.showNext()
                        });
                        var e = strToClass(a);
                        t.$choices.find("." + e).click()
                    })
                }), n
            },
            generateSecondary: function(t) {
                var n = $('<div class="kink-simple">');
                return $('<span class="choice">').addClass(level[t.value]).appendTo(n), $('<span class="txt-category">').text(t.category).appendTo(n), t.showField && $('<span class="txt-field">').text(t.field).appendTo(n), $('<span class="txt-kink">').text(t.kink).appendTo(n), n
            },
            showIndex: function(o) {
                n.html(""), e.html(""), s.html(""), t.data("index", o);
                var r = inputKinks.inputPopup.kinkByIndex(o),
                    l = inputKinks.inputPopup.generatePrimary(r);
                s.append(l), i.text(r.category), a.text((r.showField ? "(" + r.field + ") " : "") + r.kink), s.append(l);
                for (var u = inputKinks.inputPopup.numPrev; u > 0; u--) {
                    var c = inputKinks.inputPopup.kinkByIndex(o - u),
                        p = inputKinks.inputPopup.generateSecondary(c);
                    n.append(p),
                        function(t) {
                            p.on("click", function() {
                                inputKinks.inputPopup.showPrev(t)
                            })
                        }(u)
                }
                for (u = 1; u <= inputKinks.inputPopup.numNext; u++) {
                    var d = inputKinks.inputPopup.kinkByIndex(o + u),
                        h = inputKinks.inputPopup.generateSecondary(d);
                    e.append(h),
                        function(t) {
                            h.on("click", function() {
                                inputKinks.inputPopup.showNext(t)
                            })
                        }(u)
                }
            },
            showPrev: function(n) {
                "number" != typeof n && (n = 1);
                var e = t.data("index") - n,
                    i = inputKinks.inputPopup.allKinks.length;
                e = (i + e) % i, inputKinks.inputPopup.showIndex(e)
            },
            showNext: function(n) {
                "number" != typeof n && (n = 1);
                var e = t.data("index") + n,
                    i = inputKinks.inputPopup.allKinks.length;
                e = (i + e) % i, inputKinks.inputPopup.showIndex(e)
            },
            show: function() {
                inputKinks.inputPopup.allKinks = inputKinks.getAllKinks(), inputKinks.inputPopup.showIndex(0), t.fadeIn()
            }
        }, $(window).on("keydown", function(n) {
            if (!(n.altKey || n.shiftKey || n.ctrlKey) && t.is(":visible")) {
                38 === n.keyCode && (inputKinks.inputPopup.showPrev(), n.preventDefault(), n.stopPropagation()), 40 === n.keyCode && (inputKinks.inputPopup.showNext(), n.preventDefault(), n.stopPropagation());
                var e = -1;
                if (n.keyCode >= 96 && n.keyCode <= 101) e = n.keyCode - 96;
                else {
                    if (!(n.keyCode >= 48 && n.keyCode <= 53)) return;
                    e = n.keyCode - 48
                }
                s.find(".big-choice").eq(e).click()
            }
        }), $("#StartBtn").on("click", inputKinks.inputPopup.show), $("#InputCurrent .closePopup, #InputOverlay").on("click", function() {
            t.fadeOut()
        })
    }()
});